(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{"/daf":function(e,n,t){(e.exports=t("I1BE")(!1)).push([e.i,"",""])},"5Vci":function(e,n,t){"use strict";t.r(n);var s=t("W7Mj"),a={name:"ToolsTreeCommand",components:{md:t.n(s).a}},r=t("JFUb");var i=function(e){t("nvlr")},o=Object(r.a)(a,function(){var e=this.$createElement,n=this._self._c||e;return n("div",[n("md")],1)},[],!1,i,"data-v-14c41b36",null);n.default=o.exports},"V/vw":function(e,n,t){"use strict";t.r(n);var s=t("JFUb"),a=Object(s.a)(null,function(){var e=this;e.$createElement;e._self._c;return e._m(0)},[function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("section",[t("p",[t("code",{pre:!0},[e._v("tree")]),e._v("是一个能列出递归目录的命令，以图形显示驱动器或路径的文件夹结构，可以生成命令树。"),t("code",{pre:!0},[e._v("Windows")]),e._v("和"),t("code",{pre:!0},[e._v("Linux")]),e._v("都有，"),t("code",{pre:!0},[e._v("mac")]),e._v("没有原生支持，需要安装"),t("code",{pre:!0},[e._v("tree")]),e._v("。")]),e._v(" "),t("h3",{attrs:{id:"an-zhuang-tree"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#an-zhuang-tree","aria-hidden":"true"}},[e._v("¶")]),e._v(" 安装tree")]),e._v(" "),t("pre",{pre:!0},[t("code",{attrs:{class:"hljs language-shell"}},[t("span",{attrs:{class:"hljs-meta"}},[e._v("#")]),t("span",{attrs:{class:"bash"}},[e._v(" 安装tree")]),e._v("\nbrew install tree\n")])]),e._v(" "),t("h3",{attrs:{id:"yi-xie-shi-yong-de-yong-fa"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#yi-xie-shi-yong-de-yong-fa","aria-hidden":"true"}},[e._v("¶")]),e._v(" 一些实用的用法")]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("1、 指定目录层级")])])]),e._v(" "),t("pre",{pre:!0},[t("code",{attrs:{class:"hljs language-shell"}},[t("span",{attrs:{class:"hljs-meta"}},[e._v("#")]),t("span",{attrs:{class:"bash"}},[e._v(" 只显示一级目录")]),e._v("\ntree -L 1\n")])]),e._v(" "),t("p",[e._v("生成如下结构：")]),e._v(" "),t("pre",{pre:!0},[t("code",{attrs:{class:"hljs language-shell"}},[e._v(".\n├── README.md\n├── app.js\n├── dist\n├── node_modules\n├── package-lock.json\n├── package.json\n├── src\n└── webpack.config.js\n")])]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("2、指定某个目录")])])]),e._v(" "),t("pre",{pre:!0},[t("code",{attrs:{class:"hljs language-shell"}},[t("span",{attrs:{class:"hljs-meta"}},[e._v("#")]),t("span",{attrs:{class:"bash"}},[e._v(" 查看node_modules下面的结构")]),e._v("\ntree -d node_modules/\n")])]),e._v(" "),t("p",[e._v("生成如下结构：")]),e._v(" "),t("pre",{pre:!0},[t("code",{attrs:{class:"hljs language-shell"}},[e._v("node_modules/\n├── @babel\n├── @mrmlnc\n├── @nodelib\n├── @types\n├── @webassemblyjs\n├── @xtuc\n├── accepts\n├── acorn\n├── acorn-dynamic-import\n")])]),e._v(" "),t("ul",[t("li",[e._v("3、 忽略某目录")])]),e._v(" "),t("pre",{pre:!0},[t("code",{attrs:{class:"hljs language-shell"}},[t("span",{attrs:{class:"hljs-meta"}},[e._v("#")]),t("span",{attrs:{class:"bash"}},[e._v(" 忽略node_modules")]),e._v("\ntree -I node_modules\n")])]),e._v(" "),t("p",[e._v("生成结构如下：")]),e._v(" "),t("pre",{pre:!0},[t("code",{attrs:{class:"hljs language-shell"}},[e._v(".\n├── README.md\n├── app.js\n├── dist\n├── package-lock.json\n├── package.json\n")])]),e._v(" "),t("ul",[t("li",[e._v("4、 输出到某个文件")])]),e._v(" "),t("pre",{pre:!0},[t("code",{attrs:{class:"hljs language-shell"}},[t("span",{attrs:{class:"hljs-meta"}},[e._v("#")]),t("span",{attrs:{class:"bash"}},[e._v(" 输出到tree.md")]),e._v("\ntree > tree.md\n")])]),e._v(" "),t("h3",{attrs:{id:"tong-guo-tree-help-cha-kan-suo-you-yong-fa"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tong-guo-tree-help-cha-kan-suo-you-yong-fa","aria-hidden":"true"}},[e._v("¶")]),e._v(" 通过"),t("code",{pre:!0},[e._v("tree --help")]),e._v("查看所有用法")]),e._v(" "),t("pre",{pre:!0},[t("code",{attrs:{class:"hljs language-shell"}},[e._v("  -a            All files are listed.\n  -d            List directories only.\n  -l            Follow symbolic links like directories.\n  -f            Print the full path prefix for each file.\n  -x            Stay on current filesystem only.\n  -L level      Descend only level directories deep.\n  -R            Rerun tree when max dir level reached.\n  -P pattern    List only those files that match the pattern given.\n  -I pattern    Do not list files that match the given pattern.\n  --ignore-case Ignore case when pattern matching.\n  --matchdirs   Include directory names in -P pattern matching.\n  --noreport    Turn off file/directory count at end of tree listing.\n  --charset X   Use charset X for terminal/HTML and indentation line output.\n  --filelimit # Do not descend dirs with more than # files in them.\n  --timefmt <f> Print and format time according to the format <f>.\n  -o filename   Output to file instead of stdout.\n  -------- File options ---------\n  -q            Print non-printable characters as '?'.\n  -N            Print non-printable characters as is.\n  -Q            Quote filenames with double quotes.\n  -p            Print the protections for each file.\n  -u            Displays file owner or UID number.\n  -g            Displays file group owner or GID number.\n  -s            Print the size in bytes of each file.\n  -h            Print the size in a more human readable way.\n  --si          Like -h, but use in SI units (powers of 1000).\n  -D            Print the date of last modification or (-c) status change.\n  -F            Appends '/', '=', '*', '@', '|' or '>' as per ls -F.\n  --inodes      Print inode number of each file.\n  --device      Print device ID number to which each file belongs.\n  ------- Sorting options -------\n  -v            Sort files alphanumerically by version.\n  -t            Sort files by last modification time.\n  -c            Sort files by last status change time.\n  -U            Leave files unsorted.\n  -r            Reverse the order of the sort.\n  --dirsfirst   List directories before files (-U disables).\n  --sort X      Select sort: name,version,size,mtime,ctime.\n  ------- Graphics options ------\n  -i            Don't print indentation lines.\n  -A            Print ANSI lines graphic indentation lines.\n  -S            Print with CP437 (console) graphics indentation lines.\n  -n            Turn colorization off always (-C overrides).\n  -C            Turn colorization on always.\n  ------- XML/HTML/JSON options -------\n  -X            Prints out an XML representation of the tree.\n  -J            Prints out an JSON representation of the tree.\n  -H baseHREF   Prints out HTML format with baseHREF as top directory.\n  -T string     Replace the default HTML title and H1 header with string.\n  --nolinks     Turn off hyperlinks in HTML output.\n  ---- Miscellaneous options ----\n  --version     Print version and exit.\n  --help        Print usage and this help message and exit.\n  --            Options processing terminator\n")])])])}],!1,null,null,null);n.default=a.exports},W7Mj:function(e,n,t){e.exports=t("V/vw")},nvlr:function(e,n,t){var s=t("/daf");"string"==typeof s&&(s=[[e.i,s,""]]),s.locals&&(e.exports=s.locals);(0,t("SZ7m").default)("5914150d",s,!0,{})}}]);