(window.webpackJsonp=window.webpackJsonp||[]).push([["typescript.useSkill"],{"8Gbg":function(s,a,t){"use strict";t.r(a);var e=t("CVRG"),n={name:"TypescriptUseSkill",components:{md:t.n(e).a}},r=t("JFUb");var l=function(s){t("etVI")},v=Object(r.a)(n,function(){var s=this.$createElement,a=this._self._c||s;return a("div",[a("md")],1)},[],!1,l,"data-v-61c41618",null);a.default=v.exports},"8fwQ":function(s,a,t){"use strict";t.r(a);var e=t("JFUb"),n=Object(e.a)(null,function(){var s=this;s.$createElement;s._self._c;return s._m(0)},[function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("section",[t("h3",{attrs:{id:"never"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#never","aria-hidden":"true"}},[s._v("¶")]),s._v(" "),t("code",{pre:!0},[s._v("never")])]),s._v(" "),t("p",[s._v("用来预判一些未来可能会出现的错误。比如以下的场景:")]),s._v(" "),t("pre",{pre:!0},[t("code",{attrs:{class:"hljs language-typescript"}},[t("span",{attrs:{class:"hljs-keyword"}},[s._v("interface")]),s._v(" Foo {\n  "),t("span",{attrs:{class:"hljs-keyword"}},[s._v("type")]),s._v(": "),t("span",{attrs:{class:"hljs-string"}},[s._v("'foo'")]),s._v("\n}\n\n"),t("span",{attrs:{class:"hljs-keyword"}},[s._v("interface")]),s._v(" Bar {\n  "),t("span",{attrs:{class:"hljs-keyword"}},[s._v("type")]),s._v(": "),t("span",{attrs:{class:"hljs-string"}},[s._v("'bar'")]),s._v("\n}\n\n"),t("span",{attrs:{class:"hljs-keyword"}},[s._v("type")]),s._v(" All = Foo | Bar\n")])]),s._v(" "),t("p",[s._v("在 switch 当中判断 type，TS 是可以收窄类型的 (discriminated union)：")]),s._v(" "),t("pre",{pre:!0},[t("code",{attrs:{class:"hljs language-typescript"}},[t("span",{attrs:{class:"hljs-function"}},[t("span",{attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),t("span",{attrs:{class:"hljs-title"}},[s._v("handleValue")]),s._v("("),t("span",{attrs:{class:"hljs-params"}},[s._v("val: All")]),s._v(") ")]),s._v("{\n  "),t("span",{attrs:{class:"hljs-keyword"}},[s._v("switch")]),s._v(" (val.type) {\n    "),t("span",{attrs:{class:"hljs-keyword"}},[s._v("case")]),s._v(" "),t("span",{attrs:{class:"hljs-string"}},[s._v("'foo'")]),s._v(":\n      "),t("span",{attrs:{class:"hljs-comment"}},[s._v("// 这里 val 被收窄为 Foo")]),s._v("\n      "),t("span",{attrs:{class:"hljs-keyword"}},[s._v("break")]),s._v("\n    "),t("span",{attrs:{class:"hljs-keyword"}},[s._v("case")]),s._v(" "),t("span",{attrs:{class:"hljs-string"}},[s._v("'bar'")]),s._v(":\n      "),t("span",{attrs:{class:"hljs-comment"}},[s._v("// val 在这里是 Bar")]),s._v("\n      "),t("span",{attrs:{class:"hljs-keyword"}},[s._v("break")]),s._v("\n    "),t("span",{attrs:{class:"hljs-keyword"}},[s._v("default")]),s._v(":\n      "),t("span",{attrs:{class:"hljs-comment"}},[s._v("// val 在这里是 never")]),s._v("\n      "),t("span",{attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" exhaustiveCheck: never = val\n      "),t("span",{attrs:{class:"hljs-keyword"}},[s._v("break")]),s._v("\n  }\n}\n")])]),s._v(" "),t("p",[s._v("注意在 default 里面我们把被收窄为 never 的 val 赋值给一个显式声明为 never 的变量。如果一切逻辑正确，那么这里应该能够编译通过。但是假如后来有一天你的同事改了 All 的类型：")]),s._v(" "),t("pre",{pre:!0},[t("code",{attrs:{class:"hljs language-typescript"}},[t("span",{attrs:{class:"hljs-keyword"}},[s._v("type")]),s._v(" All = Foo | Bar | Baz\n")])]),s._v(" "),t("div",{staticClass:"success"},[t("p",[s._v("设置了"),t("code",{pre:!0},[s._v("never")]),s._v("的值，就会抛出错误不能将"),t("code",{pre:!0},[s._v("Baz")]),s._v("赋值给"),t("code",{pre:!0},[s._v("never")]),s._v("，这样一来就可以囊括"),t("code",{pre:!0},[s._v("switch")]),s._v("所有的情况。")])])])}],!1,null,null,null);a.default=n.exports},CVRG:function(s,a,t){s.exports=t("8fwQ")},Cr3p:function(s,a,t){(s.exports=t("I1BE")(!1)).push([s.i,"",""])},etVI:function(s,a,t){var e=t("Cr3p");"string"==typeof e&&(e=[[s.i,e,""]]),e.locals&&(s.exports=e.locals);(0,t("SZ7m").default)("211bfbd0",e,!0,{})}}]);